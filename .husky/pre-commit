#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

if [ "$HUSKY_GIT_PARAMS" = "--no-verify" ]; then
  echo "‚úÖ –•—É–∫ –ø—Ä–æ–ø—É—â–µ–Ω (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω --no-verify)"
  exit 0
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –≤–µ—Ç–∫–∞ —Å "feature/"
if echo "$CURRENT_BRANCH" | grep -q '^feature/'; then
  echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º npx changeset –¥–ª—è –≤–µ—Ç–∫–∏ $CURRENT_BRANCH"
  npx changeset --empty

  # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
  sleep 1

  # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ñ–∞–π–ª—É
  CHANGESET_FILE=$(find .changeset -type f -name "*.md" | sort -r | head -n 1)

  echo "üìÑ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: $CHANGESET_FILE"

  # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
  COMMIT_MSG=$(git log -1 --pretty=%B)

  # –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º—É–º 5 —Å—Ç—Ä–æ–∫, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  FILE_LINES=$(wc -l < "$CHANGESET_FILE")
  while [ $FILE_LINES -lt 5 ]; do
    echo "" >> "$CHANGESET_FILE"
    FILE_LINES=$((FILE_LINES + 1))
  done

  echo "üìÑ –§–∞–π–ª –¥–æ–ø–æ–ª–Ω–µ–Ω –¥–æ 5 —Å—Ç—Ä–æ–∫"

  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ 2-—é –ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ awk
  awk 'NR == 2 { print "\"test-changelog-vite\": patch" } { print }' "$CHANGESET_FILE" > "$CHANGESET_FILE.tmp" && mv "$CHANGESET_FILE.tmp" "$CHANGESET_FILE"

  # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 5-—é –ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ awk
  awk -v msg="$COMMIT_MSG" 'NR == 5 { print msg } { print }' "$CHANGESET_FILE" > "$CHANGESET_FILE.tmp" && mv "$CHANGESET_FILE.tmp" "$CHANGESET_FILE"

  git add "$CHANGESET_FILE"
  echo "‚úÖ changeset —Å–æ–∑–¥–∞–Ω –∏ –∏–∑–º–µ–Ω—ë–Ω"
else
  echo "‚ÑπÔ∏è –í–µ—Ç–∫–∞ $CURRENT_BRANCH –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç pattern"
fi